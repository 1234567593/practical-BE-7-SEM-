def fibonacci_recursive(n):
    if n == 0:  # Base case: F(0) = 0
        return 0
    elif n == 1:  # Base case: F(1) = 1
        return 1
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)  # Recursive step

# Example usage
n = 5
result = fibonacci_recursive(n)
print(f"Fibonacci({n}) = {result}")













def fibonacci_iterative(n):
    if n == 0:  # Base case: F(0) = 0
        return 0
    elif n == 1:  # Base case: F(1) = 1
        return 1

    a, b = 0, 1  # Starting values for F(0) and F(1)
    for _ in range(2, n + 1):  # Loop from 2 to n
        a, b = b, a + b  # Update to next Fibonacci numbers
    return b  # Return the nth Fibonacci number

# Example usage
n = 5
result = fibonacci_iterative(n)
print(f"Fibonacci({n}) = {result}")










